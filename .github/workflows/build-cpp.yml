name: C++ Build & Test

on:
  push:
    branches: [ main ]
    paths:
      - 'cpp/**'
      - '.github/workflows/build-cpp.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'cpp/**'
      - '.github/workflows/build-cpp.yml'

jobs:
  build-and-test:
    name: Build and Test C++ on ${{ matrix.os }} (${{ matrix.build_type }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        build_type: [Debug, Release]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # --- OS Specific Setup ---
    - name: Setup Developer Command Prompt (Windows)
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install build essentials (Linux)
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install -y build-essential ninja-build
      shell: bash

    # --- Common Setup ---
    - name: Set up CMake
      uses: lukka/get-cmake@latest
      with:
        cmakeVersion: "~3.20.0"

    # --- ccache Setup ---
    - name: Install ccache (Windows)
      if: runner.os == 'Windows'
      run: choco install ccache --no-progress -y
      shell: pwsh

    - name: Install ccache (Linux)
      if: runner.os == 'Linux'
      run: sudo apt-get install -y ccache
      shell: bash

    - name: Cache ccache directory
      uses: actions/cache@v4
      id: ccache-cache
      with:
        path: ${{ github.workspace }}/.ccache
        key: ccache-${{ runner.os }}-${{ matrix.build_type }}-${{ hashFiles('cpp/**/*.cpp', 'cpp/**/*.h', 'cpp/**/*.hpp') }}-v1
        restore-keys: |
          ccache-${{ runner.os }}-${{ matrix.build_type }}-v1
          ccache-${{ runner.os }}-v1

    - name: Configure ccache settings (Windows)
      if: runner.os == 'Windows'
      run: |
        New-Item -ItemType Directory -Force -Path "${{ github.workspace }}/.ccache"
        ccache --set-config=cache_dir="${{ github.workspace }}/.ccache"
        ccache --set-config=max_size=2G
        # ccache --set-config=hash_dir=false # Optional: Consider if needed for your setup
        ccache -z # Zero statistics before build
      shell: pwsh

    - name: Configure ccache settings (Linux)
      if: runner.os == 'Linux'
      run: |
        mkdir -p "${{ github.workspace }}/.ccache"
        ccache --set-config=cache_dir="${{ github.workspace }}/.ccache"
        ccache --set-config=max_size=2G
        # ccache --set-config=hash_dir=false # Optional: Consider if needed for your setup
        ccache -z # Zero statistics before build
      shell: bash

    # --- FetchContent Cache ---
    - name: Cache FetchContent dependencies
      uses: actions/cache@v4
      id: fetchcontent-cache
      with:
        path: ${{ github.workspace }}/cpp/build/_deps
        key: fetchcontent-${{ runner.os }}-${{ hashFiles('cpp/CMakeLists.txt') }}-v1
        restore-keys: |
          fetchcontent-${{ runner.os }}-v1

    # --- Build Steps ---
    - name: Configure CMake (Windows)
      if: runner.os == 'Windows'
      run: |
        cmake -B ${{ github.workspace }}/cpp/build -S ${{ github.workspace }} -G "Ninja" `
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} `
        -DCMAKE_CXX_STANDARD=20 `
        -DCMAKE_C_COMPILER_LAUNCHER=ccache `
        -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
      shell: pwsh

    - name: Configure CMake (Linux)
      if: runner.os == 'Linux'
      run: |
        cmake -B ${{ github.workspace }}/cpp/build -S ${{ github.workspace }} -G "Ninja" \
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
        -DCMAKE_CXX_STANDARD=20 \
        -DCMAKE_C_COMPILER_LAUNCHER=ccache \
        -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
      shell: bash

    - name: Build (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        cmake --build ${{ github.workspace }}/cpp/build --config ${{ matrix.build_type }} --parallel

    - name: Build (Linux)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        cmake --build ${{ github.workspace }}/cpp/build --config ${{ matrix.build_type }} --parallel

    - name: Show ccache statistics after build
      shell: bash
      run: ccache -s

    # --- List build directory ---
    - name: List Build Directory Contents (Windows)
      if: runner.os == 'Windows'
      working-directory: ${{ github.workspace }}/cpp/build
      shell: pwsh
      run: |
       Get-ChildItem -Recurse bin | Select-Object FullName, Length # Focus on the bin directory

    - name: List Build Directory Contents (Linux)
      if: runner.os == 'Linux'
      working-directory: ${{ github.workspace }}/cpp/build
      shell: bash
      run: |
        ls -lR bin # Focus on the bin directory

    # --- Test Step ---
    - name: Run Tests (Windows)
      if: runner.os == 'Windows'
      working-directory: ${{ github.workspace }}/cpp/build
      shell: pwsh
      run: ctest -C ${{ matrix.build_type }} --output-on-failure -VV

    - name: Run Tests (Linux)
      if: runner.os == 'Linux'
      working-directory: ${{ github.workspace }}/cpp/build
      shell: bash
      run: ctest -C ${{ matrix.build_type }} --output-on-failure -VV

