name: C++ Build & Test

on:
  push:
    branches: [ main ]
    paths:
      - 'cpp/**'
      - '.github/workflows/build-cpp.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'cpp/**'
      - '.github/workflows/build-cpp.yml'

jobs:
  build-and-test:
    name: Build and Test C++ on Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Developer Command Prompt
      uses: ilammy/msvc-dev-cmd@v1

    - name: Set up CMake and Ninja
      uses: lukka/get-cmake@latest
      with:
        cmakeVersion: "~3.27.0"
        ninjaVersion: "~1.11.0"

    - name: Install ccache
      run: |
        choco install ccache -y
        ccache --version
      shell: cmd

    - name: Cache ccache directory
      uses: actions/cache@v4
      id: ccache-cache
      with:
        path: ${{ github.workspace }}/.ccache
        key: ccache-${{ runner.os }}-${{ matrix.build_type }}-${{ hashFiles('cpp/**/*.cpp', 'cpp/**/*.h', 'cpp/**/*.hpp') }}-v1
        restore-keys: |
          ccache-${{ runner.os }}-${{ matrix.build_type }}-v1
          ccache-${{ runner.os }}-v1

    - name: Configure ccache
      run: |
        mkdir -p ${{ github.workspace }}\.ccache
        ccache --max-size=2G
        ccache --set-config=hash_dir=false
        ccache --set-config=cache_dir=${{ github.workspace }}\.ccache
        ccache -z
      shell: cmd

    - name: Cache vcpkg
      uses: actions/cache@v4
      id: vcpkg-cache
      with:
        path: |
          ${{ github.workspace }}/vcpkg
          !${{ github.workspace }}/vcpkg/buildtrees
          !${{ github.workspace }}/vcpkg/downloads
        key: vcpkg-${{ runner.os }}-${{ hashFiles('cpp/CMakeLists.txt') }}-v1
        restore-keys: |
          vcpkg-${{ runner.os }}-v1

    - name: Cache build directory
      uses: actions/cache@v4
      id: build-cache
      with:
        path: |
          ${{ github.workspace }}/build
          !${{ github.workspace }}/build/Testing
        key: build-${{ runner.os }}-${{ matrix.build_type }}-${{ hashFiles('cpp/**/*.cpp', 'cpp/**/*.h', 'cpp/**/*.hpp', 'cpp/CMakeLists.txt') }}-v1
        restore-keys: |
          build-${{ runner.os }}-${{ matrix.build_type }}-v1

    - name: Checkout vcpkg
      if: steps.vcpkg-cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
      with:
        repository: microsoft/vcpkg
        path: vcpkg

    - name: Bootstrap vcpkg
      if: steps.vcpkg-cache.outputs.cache-hit != 'true'
      run: |
        cd ${{ github.workspace }}/vcpkg
        .\bootstrap-vcpkg.bat -disableMetrics
      shell: cmd

    - name: Install core dependencies with vcpkg
      run: |
        ${{ github.workspace }}/vcpkg/vcpkg install spdlog:x64-windows gtest:x64-windows cpuid:x64-windows rapidjson:x64-windows zlib:x64-windows async-mqtt[tls]:x64-windows
        ${{ github.workspace }}/vcpkg/vcpkg integrate install
      shell: cmd

    - name: Verify Ninja installation
      run: |
        ninja --version
      shell: cmd

    - name: Configure CMake with ccache
      run: |
        cmake -B ${{ github.workspace }}/build -G "Ninja" ^
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ^
        -DCMAKE_CXX_STANDARD=20 ^
        -DCMAKE_C_COMPILER_LAUNCHER=ccache ^
        -DCMAKE_CXX_COMPILER_LAUNCHER=ccache ^
        -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
      shell: cmd

    - name: Build
      run: |
        cmake --build ${{ github.workspace }}/build --config ${{ matrix.build_type }} --parallel
      shell: cmd

    - name: ccache statistics
      run: |
        ccache -s
      shell: cmd
